name: 🚀 Deploy Spring Boot ECS Infrastructure

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '18'

jobs:
  # ============================================================================
  # CI Jobs (Run on all branches)
  # ============================================================================
  
  lint-and-test:
    name: 🧪 Lint & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔨 Build TypeScript
        run: npm run build
        
      - name: 🧪 Run tests
        run: npm test
        
      - name: 📊 Test Coverage
        run: npm run test -- --coverage
        continue-on-error: true
        
      - name: 📋 CDK Diff (Dry Run)
        run: |
          npm run build
          npx cdk synth --quiet
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
          CDK_DEFAULT_REGION: ${{ env.AWS_REGION }}

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔍 Run npm audit
        run: npm audit --audit-level moderate
        continue-on-error: true
        
      - name: 🔒 Run CDK security scan
        run: |
          npm run build
          # Add additional security scanning tools here
          echo "Security scan completed"

  # ============================================================================
  # CD Jobs (Deploy only on main/master branch)
  # ============================================================================
  
  deploy-dev:
    name: 🚀 Deploy to Development
    runs-on: ubuntu-latest
    needs: [lint-and-test, security-scan]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch'
    environment: 
      name: development
      url: https://spring-dev.oazis.site
    
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔨 Build project
        run: npm run build
        
      - name: ⚙️ Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: 🏗️ CDK Bootstrap (if needed)
        run: |
          npx cdk bootstrap aws://${{ secrets.CDK_DEFAULT_ACCOUNT }}/${{ env.AWS_REGION }}
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
          CDK_DEFAULT_REGION: ${{ env.AWS_REGION }}
          
      - name: 📋 CDK Diff
        run: npx cdk diff
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
          CDK_DEFAULT_REGION: ${{ env.AWS_REGION }}
          
      - name: 🚀 CDK Deploy
        run: npx cdk deploy --require-approval never
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
          CDK_DEFAULT_REGION: ${{ env.AWS_REGION }}
          
      - name: 🧪 Post-deployment tests
        run: |
          echo "Running post-deployment health checks..."
          # Add health check commands here
          # curl -f https://spring-dev.oazis.site || exit 1
          
      - name: 📝 Deployment Summary
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: Development" >> $GITHUB_STEP_SUMMARY
          echo "- **Region**: ${{ env.AWS_REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: https://spring-dev.oazis.site" >> $GITHUB_STEP_SUMMARY

  deploy-staging:
    name: 🎭 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [deploy-dev]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: 
      name: staging
      url: https://spring-staging.oazis.site
    
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔨 Build project
        run: npm run build
        
      - name: ⚙️ Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: 🚀 CDK Deploy to Staging
        run: npx cdk deploy EcsProjectStack-Staging --require-approval never
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT_STAGING }}
          CDK_DEFAULT_REGION: ${{ env.AWS_REGION }}

  deploy-production:
    name: 🏭 Deploy to Production
    runs-on: ubuntu-latest
    needs: [deploy-staging]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: 
      name: production
      url: https://spring.oazis.site
    
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔨 Build project
        run: npm run build
        
      - name: ⚙️ Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: 🚀 CDK Deploy to Production
        run: npx cdk deploy EcsProjectStack-Production --require-approval never
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT_PROD }}
          CDK_DEFAULT_REGION: ${{ env.AWS_REGION }}
          
      - name: 🎉 Production Deployment Success
        run: |
          echo "## 🎉 Production Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: Production" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: https://spring.oazis.site" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
